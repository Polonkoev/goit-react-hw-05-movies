{"version":3,"file":"static/js/236.8c9d3292.chunk.js","mappings":"+SAEMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GACrB,kDACA,CACEC,OAAQ,CACNC,QAASJ,KALV,cACCK,EADD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBP,EAAAA,EAAAA,GAAM,6CAA8C,CACzEC,OAAQ,CACNC,QAASJ,EACTU,MAAOD,EACPE,eAAe,KALd,cACCN,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,wFACkBX,EAAAA,EAAAA,GAAM,sCAAD,OACYW,GACtC,CACEV,OAAQ,CACNC,QAASJ,KALV,cACCK,EADD,yBASEA,EAASC,MATX,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,wFACkBX,EAAAA,EAAAA,GAAM,sCAAD,OACYW,EADZ,YAE1B,CACEV,OAAQ,CACNC,QAASJ,KALV,cACCK,EADD,yBASEA,EAASC,KAAKS,MAThB,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,wFACkBX,EAAAA,EAAAA,GAAM,sCAAD,OACYW,EADZ,YAE1B,CACEV,OAAQ,CACNC,QAASJ,KALV,cACCK,EADD,yBASEA,EAASC,KAAKC,SAThB,kE,wKC/CMU,EAAOC,EAAAA,GAAAA,KAAH,qFAMJC,EAAaD,EAAAA,GAAAA,GAAH,oKAUVE,GAAiBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yFAMdI,EAASJ,EAAAA,GAAAA,OAAH,kO,SCnBNK,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAQkB,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACyBzB,EAAAA,EAAAA,IAAgBE,GADzC,OACQL,EADR,OAEEqB,EAASrB,GAFX,4CAFc,sBACA,KAAVK,GAA0B,OAAVA,GADN,mCAMdwB,EACD,GAAE,CAACxB,IAWJ,OACE,iCACE,UAACO,EAAD,CAAMkB,SAXY,SAAAC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACnBV,EAAgB,CAAEnB,MAAO4B,EAAKE,SAASC,WAAWhB,QAElDa,EAAKI,OACN,EAIG,WACE,kBACEC,KAAK,OACLC,KAAK,aACLC,YAAY,yBAGd,SAACvB,EAAD,wBAGS,OAAVG,IACC,SAACN,EAAD,UACGM,EAAMqB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OACE,yBACE,SAAC5B,EAAD,CAAgB6B,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMpB,GAA5C,SACGiB,KAFID,EAMZ,OAGL,SAAC,KAAD,MAGL,ECxDYK,EAAS,WACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,OACE,qCACeE,IAAZF,IAAyB,SAAC9B,EAAD,KAE1B,SAAC,KAAD,MAGL,C","sources":["components/FetchAPI/FetchAPI.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '894a5fcb5eb3af426933275e70f0cd83';\n\nexport async function fetchMovieTrending() {\n  const response = await axios(\n    'https://api.themoviedb.org/3/trending/movie/day',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n}\n\nexport async function findMovieByName(keyword) {\n  const response = await axios(`https://api.themoviedb.org/3/search/movie?`, {\n    params: {\n      api_key: API_KEY,\n      query: keyword,\n      include_adult: false,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function findMovieById(movie_id) {\n  const response = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data;\n}\n\nexport async function findMovieCredits(movie_id) {\n  const response = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.cast;\n}\nexport async function findMovieReviews(movie_id) {\n  const response = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response.data.results;\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const SearchList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  padding: 0;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const SearchListLink = styled(Link)`\n  color: #60c15c;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  /* margin-left: 20px; */\n  color: #024024;\n  background-color: #1bde87;\n\n  border: 2px solid #5cabc1;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #a41bde;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Outlet, useLocation } from 'react-router-dom';\nimport { findMovieByName } from '../FetchAPI/FetchAPI';\n\nimport { SearchList, SearchListLink, Form, Button} from './SearchMovies.styled';\n\nexport const SearchMovies = () => {\n  const [value, setValue] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    async function fetchMovie() {\n      const response = await findMovieByName(query);\n      setValue(response);\n    }\n    fetchMovie();\n  }, [query]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    setSearchParams({ query: form.elements.inputValue.value });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          name=\"inputValue\"\n          placeholder=\"Enter movie name...\"\n        />\n\n        <Button>Search</Button>\n      </Form>\n\n      {value !== null && (\n        <SearchList>\n          {value.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <SearchListLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </SearchListLink>\n              </li>\n            );\n          })}\n        </SearchList>\n      )}\n      <Outlet />\n    </>\n  );\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\n\nexport const Movies = () => {\n  const { movieID } = useParams();\n\n  return (\n    <>\n      {movieID === undefined && <SearchMovies />}\n\n      <Outlet />\n    </>\n  );\n};\n"],"names":["API_KEY","fetchMovieTrending","axios","params","api_key","response","data","results","findMovieByName","keyword","query","include_adult","findMovieById","movie_id","findMovieCredits","cast","findMovieReviews","Form","styled","SearchList","SearchListLink","Link","Button","SearchMovies","useState","value","setValue","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchMovie","onSubmit","event","preventDefault","form","target","elements","inputValue","reset","type","name","placeholder","map","id","title","to","state","from","Movies","movieID","useParams","undefined"],"sourceRoot":""}